/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package finance;

import connection.Connector;
import java.awt.Color;
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import org.jdesktop.swingx.JXDatePicker;

/**
 *
 * @author Sahan Jayawardena
 */
public class finance extends javax.swing.JFrame {

    /**
     * Creates new form finance
     */
    public finance() {
        initComponents();
        userleft.setBackground(new Color(255, 255, 255, 80));
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        showIncome();
        showExpense();
        in_ID.setVisible(false);
        exp_id.setVisible(false);
        starGen1.setVisible(false);
        starGen2.setVisible(false);
        starGen3.setVisible(false);
        starGen4.setVisible(false);
        starGen5.setVisible(false);
        starGen6.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        exp_table = new javax.swing.JTable();
        jButton6 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        exp_name = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        exp_type = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        exp_amt = new javax.swing.JTextField();
        userleft = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        title1 = new javax.swing.JLabel();
        title2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        title3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        in_name = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        in_amt = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        in_type = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        exp_date = new org.jdesktop.swingx.JXDatePicker();
        in_date = new org.jdesktop.swingx.JXDatePicker();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        incomeTable = new javax.swing.JTable();
        jButton7 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        in_ID = new javax.swing.JTextField();
        starGen1 = new javax.swing.JLabel();
        starGen2 = new javax.swing.JLabel();
        starGen3 = new javax.swing.JLabel();
        starGen4 = new javax.swing.JLabel();
        starGen5 = new javax.swing.JLabel();
        starGen6 = new javax.swing.JLabel();
        exp_id = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        exp_table.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(83, 43, 11), 2));
        exp_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Type", "Amount", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        exp_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exp_tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(exp_table);
        if (exp_table.getColumnModel().getColumnCount() > 0) {
            exp_table.getColumnModel().getColumn(0).setPreferredWidth(10);
            exp_table.getColumnModel().getColumn(1).setPreferredWidth(18);
            exp_table.getColumnModel().getColumn(3).setPreferredWidth(25);
            exp_table.getColumnModel().getColumn(4).setPreferredWidth(20);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 360, 520, 190));

        jButton6.setBackground(java.awt.Color.darkGray);
        jButton6.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Clear");
        jButton6.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.white, 2));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(1230, 630, 90, 30));

        jLabel4.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel4.setForeground(java.awt.Color.white);
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Name");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 150, 160, -1));

        jButton4.setBackground(java.awt.Color.darkGray);
        jButton4.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Add");
        jButton4.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.white, 2));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 630, 90, 30));

        exp_name.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.lightGray, 2));
        exp_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exp_nameActionPerformed(evt);
            }
        });
        getContentPane().add(exp_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 180, 160, 30));

        jLabel6.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel6.setForeground(java.awt.Color.white);
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Amount");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 150, 160, -1));

        jButton2.setBackground(java.awt.Color.darkGray);
        jButton2.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Update");
        jButton2.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.white, 2));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 630, 90, 30));

        exp_type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Salaries and Wages", "Utility Expenses", "Raw Material Costs", "Administration Expenses", "Finance Costs", "Depreciation", "Impairment Loses", "Maintainance", "Other" }));
        exp_type.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.blue, 2));
        exp_type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exp_typeActionPerformed(evt);
            }
        });
        getContentPane().add(exp_type, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 280, 160, 30));

        jLabel11.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel11.setForeground(java.awt.Color.white);
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Expense Type");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 250, 160, -1));

        jButton5.setBackground(java.awt.Color.darkGray);
        jButton5.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Remove");
        jButton5.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.white, 2));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 630, 90, 30));

        exp_amt.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.lightGray, 2));
        getContentPane().add(exp_amt, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 180, 160, 30));

        userleft.setBackground(new java.awt.Color(153, 0, 0));
        userleft.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        userleft.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 66, -1, 132));

        jLabel5.setFont(new java.awt.Font("Calibri", 1, 28)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Toothpaste");
        userleft.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 450, 300, 50));

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logof.png"))); // NOI18N
        userleft.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 380, 300, 90));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/finance3.png"))); // NOI18N
        userleft.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 270, 300, 110));

        getContentPane().add(userleft, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 300, 720));

        title1.setFont(new java.awt.Font("Calibri", 1, 36)); // NOI18N
        title1.setForeground(new java.awt.Color(255, 255, 255));
        title1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title1.setText("Finance Management");
        getContentPane().add(title1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 0, 1070, 70));

        title2.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        title2.setForeground(new java.awt.Color(255, 255, 255));
        title2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title2.setText("Expenses");
        getContentPane().add(title2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 80, 190, 30));

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator1.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        jSeparator1.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 60, 30, 630));

        title3.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        title3.setForeground(new java.awt.Color(255, 255, 255));
        title3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title3.setText("Income");
        getContentPane().add(title3, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 90, 190, 30));

        jLabel7.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel7.setForeground(java.awt.Color.white);
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Name");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 150, 160, -1));

        in_name.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.lightGray, 2));
        in_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                in_nameActionPerformed(evt);
            }
        });
        getContentPane().add(in_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 180, 160, 30));

        jLabel9.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel9.setForeground(java.awt.Color.white);
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Amount");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 150, 160, -1));

        in_amt.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.lightGray, 2));
        getContentPane().add(in_amt, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 180, 160, 30));

        jLabel12.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel12.setForeground(java.awt.Color.white);
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Date");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 250, 160, -1));

        in_type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Employee", "Government Payments", "Investment", "Business", "Other" }));
        in_type.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.blue, 2));
        in_type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                in_typeActionPerformed(evt);
            }
        });
        getContentPane().add(in_type, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 290, 160, 30));

        jLabel13.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel13.setForeground(java.awt.Color.white);
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Income Type");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 260, 160, -1));

        exp_date.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(83, 43, 11), 2));
        exp_date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exp_dateActionPerformed(evt);
            }
        });
        getContentPane().add(exp_date, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 280, 160, 30));

        in_date.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(83, 43, 11), 2));
        in_date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                in_dateActionPerformed(evt);
            }
        });
        getContentPane().add(in_date, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 290, 160, 30));

        jLabel14.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel14.setForeground(java.awt.Color.white);
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Date");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 260, 160, -1));

        incomeTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(83, 43, 11), 2));
        incomeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Type", "Amount", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        incomeTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                incomeTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(incomeTable);
        if (incomeTable.getColumnModel().getColumnCount() > 0) {
            incomeTable.getColumnModel().getColumn(0).setPreferredWidth(5);
            incomeTable.getColumnModel().getColumn(1).setPreferredWidth(18);
            incomeTable.getColumnModel().getColumn(3).setPreferredWidth(25);
            incomeTable.getColumnModel().getColumn(4).setPreferredWidth(20);
        }

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 360, 510, 190));

        jButton7.setBackground(java.awt.Color.darkGray);
        jButton7.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setText("Add");
        jButton7.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.white, 2));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 630, 90, 30));

        jButton3.setBackground(java.awt.Color.darkGray);
        jButton3.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Update");
        jButton3.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.white, 2));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 630, 90, 30));

        jButton8.setBackground(java.awt.Color.darkGray);
        jButton8.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jButton8.setForeground(new java.awt.Color(255, 255, 255));
        jButton8.setText("Remove");
        jButton8.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.white, 2));
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 630, 90, 30));

        jButton9.setBackground(java.awt.Color.darkGray);
        jButton9.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jButton9.setForeground(new java.awt.Color(255, 255, 255));
        jButton9.setText("Clear");
        jButton9.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.white, 2));
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 630, 90, 30));

        in_ID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                in_IDActionPerformed(evt);
            }
        });
        getContentPane().add(in_ID, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 100, 100, -1));

        starGen1.setFont(new java.awt.Font("Calibri", 0, 36)); // NOI18N
        starGen1.setForeground(java.awt.Color.red);
        starGen1.setText("*");
        getContentPane().add(starGen1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 170, -1, -1));

        starGen2.setFont(new java.awt.Font("Calibri", 0, 36)); // NOI18N
        starGen2.setForeground(java.awt.Color.red);
        starGen2.setText("*");
        getContentPane().add(starGen2, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 170, -1, -1));

        starGen3.setFont(new java.awt.Font("Calibri", 0, 36)); // NOI18N
        starGen3.setForeground(java.awt.Color.red);
        starGen3.setText("*");
        getContentPane().add(starGen3, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 280, -1, -1));

        starGen4.setFont(new java.awt.Font("Calibri", 0, 36)); // NOI18N
        starGen4.setForeground(java.awt.Color.red);
        starGen4.setText("*");
        getContentPane().add(starGen4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 160, -1, -1));

        starGen5.setFont(new java.awt.Font("Calibri", 0, 36)); // NOI18N
        starGen5.setForeground(java.awt.Color.red);
        starGen5.setText("*");
        getContentPane().add(starGen5, new org.netbeans.lib.awtextra.AbsoluteConstraints(1320, 160, -1, -1));

        starGen6.setFont(new java.awt.Font("Calibri", 0, 36)); // NOI18N
        starGen6.setForeground(java.awt.Color.red);
        starGen6.setText("*");
        getContentPane().add(starGen6, new org.netbeans.lib.awtextra.AbsoluteConstraints(1330, 270, -1, -1));
        getContentPane().add(exp_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 100, 80, -1));

        jButton1.setText("DEMO");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 80, -1, -1));

        jButton10.setText("DEMO");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton10, new org.netbeans.lib.awtextra.AbsoluteConstraints(1250, 80, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/gray2.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-1, 0, 1390, -1));

        setSize(new java.awt.Dimension(1382, 759));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void exp_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exp_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_exp_nameActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if (validateFormExpenses() != -1) {
            String in_name = this.exp_name.getText().toString();
            String Type = exp_type.getSelectedItem().toString();
            String in_price = exp_amt.getText().toString();
            String date = getDate(exp_date);

            try {
                Class.forName("com.mysql.jdbc.Driver");
                Connection myConn = DriverManager.getConnection("jdbc:mysql://localhost:3306/orocare", "root", "");

                PreparedStatement stmt = myConn.prepareStatement("INSERT INTO financeexp(name,type, amount, date,dateAdded) VALUES (?,?,?,?,NOW())");
                stmt.setString(1, in_name);
                stmt.setString(2, Type);
                stmt.setString(3, in_price);
                stmt.setString(4, date);
                int i = stmt.executeUpdate();
                refreshtableExpenses();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        exp_id.setText("");
        exp_name.setText("");
        exp_amt.setText("");
        exp_date.setDate(null);
        exp_type.setSelectedIndex(0);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void exp_typeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exp_typeActionPerformed


    }//GEN-LAST:event_exp_typeActionPerformed

    private void in_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_in_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_in_nameActionPerformed

    private void in_typeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_in_typeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_in_typeActionPerformed

    private void exp_dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exp_dateActionPerformed

    }//GEN-LAST:event_exp_dateActionPerformed

    private void in_dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_in_dateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_in_dateActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        if (validateForm() != -1) {
            String in_name = this.in_name.getText().toString();
            String Type = in_type.getSelectedItem().toString();
            String in_price = in_amt.getText().toString();
            String date = getDate(in_date);

            try {
                Class.forName("com.mysql.jdbc.Driver");
                Connection myConn = DriverManager.getConnection("jdbc:mysql://localhost:3306/orocare", "root", "");

                PreparedStatement stmt = myConn.prepareStatement("INSERT INTO financein(name,type, amount, date,dateAdded) VALUES (?,?,?,?,NOW())");
                stmt.setString(1, in_name);
                stmt.setString(2, Type);
                stmt.setString(3, in_price);
                stmt.setString(4, date);
                int i = stmt.executeUpdate();
                refreshtable();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        if (!(exp_id.getText().equals("") || exp_id.getText().isEmpty() == true)) {
            int ID = Integer.parseInt(exp_id.getText().toString());
            try {
                Class.forName("com.mysql.jdbc.Driver");
                Connection myConn = DriverManager.getConnection("jdbc:mysql://localhost:3306/orocare", "root", "");

                PreparedStatement stmt = myConn.prepareStatement("DELETE FROM financeexp WHERE finID = ?");
                stmt.setInt(1, ID);
                int i = stmt.executeUpdate();
                refreshtableExpenses();
            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
            message("Please Select a Row !");
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        in_ID.setText("");
        in_name.setText("");
        in_amt.setText("");
        in_date.setDate(null);
        in_type.setSelectedIndex(0);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void incomeTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_incomeTableMouseClicked
        try {
            int i = incomeTable.getSelectedRow();
            TableModel model = incomeTable.getModel();

            in_ID.setText(model.getValueAt(i, 0).toString());
            in_name.setText(model.getValueAt(i, 1).toString());
            in_amt.setText(model.getValueAt(i, 3).toString());
            String date = model.getValueAt(i, 4).toString();
            Date date1 = Date.valueOf(date);
            in_date.setDate(date1);

        } catch (Exception e) {
        }
    }//GEN-LAST:event_incomeTableMouseClicked

    private void in_IDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_in_IDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_in_IDActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (!(in_ID.getText().equals("") || in_ID.getText().isEmpty() == true)) {
            if (validateForm() != -1) {
                int ID = Integer.parseInt(in_ID.getText().toString());
                String Name = in_name.getText().toString();
                String Amount = in_amt.getText().toString();
                String Type = in_type.getSelectedItem().toString();
                String Date = getDate(in_date);

                try {
                    Class.forName("com.mysql.jdbc.Driver");
                    Connection myConn = DriverManager.getConnection("jdbc:mysql://localhost:3306/orocare", "root", "");

                    PreparedStatement stmt = myConn.prepareStatement("UPDATE financein SET name = ?, type = ?, amount = ?, date = ?, DateAdded = NOW() WHERE finID = ?");
                    stmt.setString(1, Name);
                    stmt.setString(2, Type);
                    stmt.setString(3, Amount);
                    stmt.setString(4, Date);
                    stmt.setInt(5, ID);
                    int i = stmt.executeUpdate();
                    refreshtable();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        } else {
            message("Please Select a Row !");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        if (!(in_ID.getText().equals("") || in_ID.getText().isEmpty() == true)) {
            int ID = Integer.parseInt(in_ID.getText().toString());
            try {
                Class.forName("com.mysql.jdbc.Driver");
                Connection myConn = DriverManager.getConnection("jdbc:mysql://localhost:3306/orocare", "root", "");

                PreparedStatement stmt = myConn.prepareStatement("DELETE FROM financein WHERE finID = ?");
                stmt.setInt(1, ID);
                int i = stmt.executeUpdate();
                refreshtable();
            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
            message("Please Select a Row !");
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (!(exp_id.getText().equals("") || exp_id.getText().isEmpty() == true)) {
            if (validateFormExpenses() != -1) {
                int ID = Integer.parseInt(exp_id.getText().toString());
                String Name = exp_name.getText().toString();
                String Amount = exp_amt.getText().toString();
                String Type = exp_type.getSelectedItem().toString();
                String Date = getDate(exp_date);

                try {
                    Class.forName("com.mysql.jdbc.Driver");
                    Connection myConn = DriverManager.getConnection("jdbc:mysql://localhost:3306/orocare", "root", "");

                    PreparedStatement stmt = myConn.prepareStatement("UPDATE financeexp SET name = ?, type = ?, amount = ?, date = ?, DateAdded = NOW() WHERE finID = ?");
                    stmt.setString(1, Name);
                    stmt.setString(2, Type);
                    stmt.setString(3, Amount);
                    stmt.setString(4, Date);
                    stmt.setInt(5, ID);
                    int i = stmt.executeUpdate();
                    refreshtableExpenses();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        } else {
            message("Please Select a Row !");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void exp_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exp_tableMouseClicked
        try {
            int i = exp_table.getSelectedRow();
            TableModel model = exp_table.getModel();

            exp_id.setText(model.getValueAt(i, 0).toString());
            exp_name.setText(model.getValueAt(i, 1).toString());
            exp_amt.setText(model.getValueAt(i, 3).toString());
            String date = model.getValueAt(i, 4).toString();
            Date date1 = Date.valueOf(date);
            exp_date.setDate(date1);

        } catch (Exception e) {
        }
    }//GEN-LAST:event_exp_tableMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        in_name.setText("Sanasa");
        in_amt.setText("1000");
        in_type.setSelectedIndex(1);
        String date = "2018-09-05";
        Date date1 = Date.valueOf(date);
        in_date.setDate(date1);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        exp_name.setText("Machine Repairs");
        exp_amt.setText("1000");
        exp_type.setSelectedIndex(7);
        String date = "2018-09-05";
        Date date1 = Date.valueOf(date);
        exp_date.setDate(date1);
    }//GEN-LAST:event_jButton10ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(finance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(finance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(finance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(finance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new finance().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField exp_amt;
    private org.jdesktop.swingx.JXDatePicker exp_date;
    private javax.swing.JTextField exp_id;
    private javax.swing.JTextField exp_name;
    private javax.swing.JTable exp_table;
    private javax.swing.JComboBox<String> exp_type;
    private javax.swing.JTextField in_ID;
    private javax.swing.JTextField in_amt;
    private org.jdesktop.swingx.JXDatePicker in_date;
    private javax.swing.JTextField in_name;
    private javax.swing.JComboBox<String> in_type;
    private javax.swing.JTable incomeTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel starGen1;
    private javax.swing.JLabel starGen2;
    private javax.swing.JLabel starGen3;
    private javax.swing.JLabel starGen4;
    private javax.swing.JLabel starGen5;
    private javax.swing.JLabel starGen6;
    private javax.swing.JLabel title1;
    private javax.swing.JLabel title2;
    private javax.swing.JLabel title3;
    private javax.swing.JPanel userleft;
    // End of variables declaration//GEN-END:variables

    private ArrayList<incomeEntity> getIncomeList() {

        incomeEntity income;
        ArrayList<incomeEntity> incomeList = new ArrayList<incomeEntity>();
        Connector c1 = new Connector();
        ResultSet rs = c1.getResultSet();
        Statement st1 = c1.getStatement();
        String sql = "SELECT * from financein";
        try {
            rs = st1.executeQuery(sql);
            while (rs.next()) {
                income = new incomeEntity(rs.getInt("finID"), rs.getString("name"), rs.getString("type"), rs.getDouble("amount"), rs.getString("date"), rs.getString("dateAdded"));
                incomeList.add(income);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return incomeList;
    }

    private void showIncome() {
        ArrayList<incomeEntity> incomeList = this.getIncomeList();
        DefaultTableModel model = (DefaultTableModel) incomeTable.getModel();
        Object[] row = new Object[7];

        for (int i = 0; i < incomeList.size(); ++i) {
            row[0] = incomeList.get(i).getID();
            row[1] = incomeList.get(i).getname();
            row[2] = incomeList.get(i).gettype();
            row[3] = incomeList.get(i).getAmount();
            row[4] = incomeList.get(i).getDate();
            model.addRow(row);
        }
    }

    private ArrayList<expenseEntity> getExpenseList() {

        expenseEntity expense;
        ArrayList<expenseEntity> expenseList = new ArrayList<expenseEntity>();
        Connector c1 = new Connector();
        ResultSet rs = c1.getResultSet();
        Statement st1 = c1.getStatement();
        String sql = "SELECT * from financeexp";
        try {
            rs = st1.executeQuery(sql);
            while (rs.next()) {
                expense = new expenseEntity(rs.getInt("finID"), rs.getString("name"), rs.getString("type"), rs.getDouble("amount"), rs.getString("date"), rs.getString("dateAdded"));
                expenseList.add(expense);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return expenseList;
    }

    private void showExpense() {
        ArrayList<expenseEntity> expenseList = this.getExpenseList();
        DefaultTableModel model = (DefaultTableModel) exp_table.getModel();
        Object[] row = new Object[7];

        for (int i = 0; i < expenseList.size(); ++i) {
            row[0] = expenseList.get(i).getID();
            row[1] = expenseList.get(i).getname();
            row[2] = expenseList.get(i).gettype();
            row[3] = expenseList.get(i).getAmount();
            row[4] = expenseList.get(i).getDate();
            model.addRow(row);
        }
    }

    public int floatValidate(JTextField num) {
        try {
            Double.parseDouble(num.getText());
            if (Double.valueOf(num.getText()) > 0) {
                return 0;
            } else {
                return -1;
            }

        } catch (NumberFormatException e) {
            return -1;
        }
    }

    private int validateForm() {
        if (strValidate(in_name) == -1) {
            message("Name Field Empty !");
            starGenerator(true, starGen1);
            return -1;
        } else {
            starGenerator(false, starGen1);
        }

        String Utname = in_name.getText();

        if (!Utname.matches("[a-zA-Z][a-zA-Z ]*")) {
            message("Name Field Contains Numbers");
            starGenerator(true, starGen1);
            return -1;
        } else {
            starGenerator(false, starGen1);
        }

        if (strValidate(in_amt) == -1) {
            message("Amount Field Empty !");
            starGenerator(true, starGen2);
            return -1;
        } else {
            starGenerator(false, starGen2);
        }

        if (floatValidate(in_amt) == -1) {
            message("Amount Field Contains Letters");
            starGenerator(true, starGen2);
            return -1;
        } else {
            starGenerator(false, starGen2);
        }

        if (in_date.getDate() == null) {
            message("Please Choose a Date !");
            starGenerator(true, starGen3);
            return -1;
        } else {
            starGenerator(false, starGen3);
        }
        return 0;
    }

    private int strValidate(JTextField textName) {
        if (textName.getText().equals(null) || textName.getText().equals("") || textName.getText().isEmpty() == true) {
            textName.setText("");
            return -1;
        } else {
            return 0;
        }
    }

    private void message(String message) {
        JOptionPane.showMessageDialog(null, message, "Error", JOptionPane.ERROR_MESSAGE);
    }

    private void starGenerator(boolean cond, JLabel jLabel) {
        jLabel.setVisible(cond);
    }

    private String getDate(JXDatePicker date1) {
        SimpleDateFormat formater = new SimpleDateFormat("yyyy-MM-dd");
        return formater.format(date1.getDate());
    }

    private void refreshtable() {
        DefaultTableModel model = (DefaultTableModel) incomeTable.getModel();
        model.setRowCount(0);
        showIncome();
    }

    private void refreshtableExpenses() {
        DefaultTableModel model = (DefaultTableModel) exp_table.getModel();
        model.setRowCount(0);
        showExpense();
    }

    private int validateFormExpenses() {
        if (strValidate(exp_name) == -1) {
            message("Name Field Empty !");
            starGenerator(true, starGen4);
            return -1;
        } else {
            starGenerator(false, starGen4);
        }

        String Utname = exp_name.getText();

        if (!Utname.matches("[a-zA-Z][a-zA-Z ]*")) {
            message("Name Field Contains Numbers");
            starGenerator(true, starGen4);
            return -1;
        } else {
            starGenerator(false, starGen4);
        }

        if (strValidate(exp_amt) == -1) {
            message("Amount Field Empty !");
            starGenerator(true, starGen5);
            return -1;
        } else {
            starGenerator(false, starGen5);
        }

        if (floatValidate(exp_amt) == -1) {
            message("Amount Field Contains Letters");
            starGenerator(true, starGen5);
            return -1;
        } else {
            starGenerator(false, starGen5);
        }

        if (exp_date.getDate() == null) {
            message("Please Choose a Date !");
            starGenerator(true, starGen6);
            return -1;
        } else {
            starGenerator(false, starGen6);
        }
        return 0;
    }
}
